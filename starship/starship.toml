format = """
$username\
$hostname\
$directory\
$git_branch\
$git_status\
$nodejs\
$python\
$rust\
$cpp\
$golang\
$docker_context\
$lua\
$java\
$php\
$ruby\
$dart\
$kotlin\
$swift\
$package\
$cmd_duration\
$time\
$line_break\
$character"""

[username]
style_user = "bold bright-cyan"
style_root = "bold bright-red"
format = "[$user]($style)"
disabled = false
show_always = true

[hostname]
ssh_only = false
format = " on [$hostname]($style)"
style = "bold bright-purple"
disabled = false

[directory]
style = "bold bright-yellow"
truncation_length = 2
truncate_to_repo = true
format = " [$path]($style)[$read_only]($read_only_style)"
read_only = "  "
home_symbol = " "

[sudo]
format = "[$symbol]($style)"
style = "bold italic bright-purple"
symbol = " ┈"
disabled = false

[git_branch]
symbol = "󰘬 "
style = "bold bright-green"
format = " via [$symbol$branch]($style)"
truncation_symbol = "⋯"
truncation_length = 14

[git_status]
style = "bold bright-red"
format = " [$all_status$ahead_behind]($style)"
conflicted = "[◪]${count}"
ahead = "${count}"
behind = "${count}"
diverged = "⇕${ahead_count}${behind_count}"
up_to_date = ""
untracked = "${count}"
stashed = "󰌗 ${count}"
modified = "${count}"
staged = " ${count}"
renamed = " ${count}"
deleted = " ${count}"

[nodejs]
symbol = " "
style = "bold bright-green"
format = " via [$symbol $version]($style)"
detect_extensions = ["js", "mjs", "cjs", "ts", "tsx", "jsx"]
detect_files = ["package.json", ".nvmrc", "yarn.lock"]
detect_folders = ["node_modules"]

[python]
symbol = " "
style = "bold bright-blue"
format = " via [${symbol}${version}]($style)"
version_format = "${raw}"
detect_extensions = ["py"]
detect_files = [".python-version", "Pipfile", "requirements.txt", "pyproject.toml"]

[rust]
symbol = " "
style = "bold bright-red"
format = " via [$symbol v$version]($style)"
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]

[golang]
symbol = "󰟓 "
style = "bold bright-cyan"
format = " via [$symbol $version]($style)"
detect_extensions = ["go"]
detect_files = ["go.mod", "go.sum"]

[lua]
symbol = " "
style = "bold bright-blue"
format = " via [$symbol $version]($style)"
detect_extensions = ["lua"]
detect_files = [".lua-version"]

[docker_context]
symbol = " "
format = " docker [$symbol$context]($style)"

[java]
symbol = " "
style = "bold bright-red"
format = " via [$symbol v$version]($style)"
detect_extensions = ["java", "class", "jar", "gradle"]

[php]
symbol = " "
style = "bold bright-magenta"
format = " via [$symbol v$version]($style)"
detect_extensions = ["php"]
detect_files = ["composer.json"]

[cpp]
symbol = " "
format = " [$symbol($version(-$name))]($style)"

[ruby]
symbol = " "
style = "bold bright-red"
format = " via [$symbol v$version]($style)"
detect_extensions = ["rb"]
detect_files = ["Gemfile", ".ruby-version"]

[dart]
symbol = " "
style = "bold bright-blue"
format = " via [$symbol v$version]($style)"
detect_extensions = ["dart"]
detect_files = ["pubspec.yaml"]

[kotlin]
symbol = " "
style = "bold bright-magenta"
format = " via [$symbol v$version]($style)"
detect_extensions = ["kt", "kts"]

[swift]
symbol = " "
style = "bold bright-red"
format = " via [$symbol v$version]($style)"
detect_extensions = ["swift"]

[package]
symbol = " "
style = "bold bright-yellow"
format = " via [$symbol $version]($style)"
version_format = "${raw}"

[cmd_duration]
min_time = 1000
style = "bold bright-yellow"
format = " took [$duration]($style)"

[time]
disabled = false
style = "bold bright-white"
format = "  [$time]($style)"
time_format = "%H:%M:%S"

[character]
success_symbol = "[󱞩](bold bright-green)"
error_symbol = "[󱞩](bold bright-red)"
vimcmd_symbol = "[󱞥](bold bright-green)"

# Add some cool separators and styling
[fill]
symbol = " "

[memory_usage]
disabled = false
threshold = 70
style = "bold dimmed bright-red"
format = " via 󰍛 [$ram]($style)"

[battery]
full_symbol = "󱊣"
charging_symbol = " "
discharging_symbol = "󱊡"
format = " [$symbol$percentage]($style)"

[[battery.display]]
threshold = 10
style = "bold red"

[[battery.display]]
threshold = 20
style = "bold yellow"

